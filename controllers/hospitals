const Hospital = require('../models/Hospital');

// router.get('/', (req,res) => {
//     res.status(200).json({success:true, msg:`Show all hospitals`});
// })

//@description Get all hospitals
//@route GET /api/v1/hospitals
//@access Public
exports.getHospitals= async (req,res,next) => {
    try{
        const hospital = await Hospital.find();

        res.status(200).json({success:true,count: hospital.length, data:hospital});
    } catch(err){
        res.status(400).json({success:false});
    }
    
};

// router.get('/:id', (req,res) => {
//     res.status(200).json({success:true, msg:`Show hospital ${req.params.id}`});
// })

//@description Get single hospital
//@route GET /api/v1/hospitals/:id
//@access Public
exports.getHospital = async (req,res,next) => {
    try{
        const hospital = await Hospital.findById(req.params.id)
        if(!hospital){
            return res.status(400).json({success:false});
        }
        res.status(200).json({success:true, data: hospital});
    } catch(err){
        res.status(400).json({success:false})
    } 
};

// router.post('/', (req,res) => {
//     res.status(200).json({success:true, msg:`Create new hospitals`});
// })

//@description Create new hospital
//@route POST /api/v1/hospitals
//@access Private
exports.createHospital = async (req,res,next) => {
    const hospital = await Hospital.create(req.body);
    res.status(201).json({success:true, data:hospital});
};

// router.put('/:id',(req,res) => {
//     res.status(200).json({success:true, msg:`Update hospital ${req.params.id}`});
// })

//description Update hospital
//route PUT /api/v1/hospitals/:id
//access Private
exports.updateHospital = async (req,res,next) => {
    try{
        const hospital = await Hospital.findByIdAndUpdate(req.params.id, req.body,{
            new:true,
            runValidators:true
        });
        if(!hospital) {
            return res.status(400).json({success:false})
        }
        res.status(200).json({success:true, data:hospital});
    } catch {
        res.status(400).json({success:false});
    }
};

// router.delete('/:id', (req,res) =>{
//     res.status(200).json({success:true, msg:`Delete hospital ${req.params.id}`})
// })

//description Delete hospital
//route DELETE /api/v1/hospitals
//access Private
exports.deleteHospital = async (req,res,next) => {
    try{
        const hospital = await Hospital.findByIdAndDelete(req.params.id);
        if(!hospital){
            return res.status(400).json({success:false});
        }
        res.status(200).json({success:true,data:{}});
    } catch(err) {
        res.status(400).json({success:false});
    } 
}

